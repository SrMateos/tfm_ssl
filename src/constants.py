from asyncio import all_tasks
from pathlib import Path

TASK1 = True

# Center D train task1
CENTER_D_DATA_PATH_TASK1_HN = Path('data/SynthRAD2025/synthRAD2025_Task1_Train_D/synthRAD2025_Task1_Train_D/Task1/HN')

# Center D train task2
CENTER_D_DATA_PATH_TASK2 = Path('data/SynthRAD2025/synthRAD2025_Task2_Train_D/synthRAD2025_Task2_Train_D/Task2/')
CENTER_D_DATA_PATH_TASK2_AB = Path(CENTER_D_DATA_PATH_TASK2 / 'AB')
CENTER_D_DATA_PATH_TASK2_HN = Path(CENTER_D_DATA_PATH_TASK2 / 'HN')
CENTER_D_DATA_PATH_TASK2_TH = Path(CENTER_D_DATA_PATH_TASK2 / 'TH')

# Train task1
TRAIN_DATA_PATH_TASK1 = Path('data/synthRAD2025_Task1_Train/Task1')
DATA_PATH_TASK1_AB = Path(TRAIN_DATA_PATH_TASK1 / 'AB')
DATA_PATH_TASK1_HN = Path(TRAIN_DATA_PATH_TASK1 / 'HN')
DATA_PATH_TASK1_TH = Path(TRAIN_DATA_PATH_TASK1 / 'TH')

# Train task1
DATA_PATH_TASK2 = Path('data/synthRAD2025_Task2_Train/Task2')
DATA_PATH_TASK2_AB = Path(DATA_PATH_TASK2 / 'AB')
DATA_PATH_TASK2_HN = Path(DATA_PATH_TASK2 / 'HN')
DATA_PATH_TASK2_TH = Path(DATA_PATH_TASK2 / 'TH')

# =====================
# Actual data paths
# =====================

# Task1
TASK1_AB = DATA_PATH_TASK1_AB
TASK1_HN = [CENTER_D_DATA_PATH_TASK1_HN, DATA_PATH_TASK1_HN]
TASK1_TH = DATA_PATH_TASK1_TH
ALL_TASK1 = [DATA_PATH_TASK1_AB, CENTER_D_DATA_PATH_TASK1_HN, DATA_PATH_TASK1_HN, DATA_PATH_TASK1_TH]

# Task2
TASK2_AB = [CENTER_D_DATA_PATH_TASK2_AB, DATA_PATH_TASK2_AB]
TASK2_HN = [CENTER_D_DATA_PATH_TASK2_HN, DATA_PATH_TASK2_HN]
TASK2_TH = [CENTER_D_DATA_PATH_TASK2_TH, DATA_PATH_TASK2_TH]
ALL_TASK2 = [CENTER_D_DATA_PATH_TASK2_AB, DATA_PATH_TASK2_AB, CENTER_D_DATA_PATH_TASK2_HN, DATA_PATH_TASK2_HN, CENTER_D_DATA_PATH_TASK2_TH, DATA_PATH_TASK2_TH]

ALL_TASKS = ALL_TASK1 + ALL_TASK2

PATCH_SIZE = (64,) * 3
MODEL_PATH = Path("ssl_model.pth")
OUTPUT_MODEL_PATH = Path("cbct_to_ct_model.pth")

# A broad range for different organ types https://radiopaedia.org/articles/windowing-ct
A_MIN_HU = -1024
A_MAX_HU = 3071



